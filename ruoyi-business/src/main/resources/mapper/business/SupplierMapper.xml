<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.business.mapper.SupplierMapper">
    
    <resultMap type="Supplier" id="SupplierResult">
        <result property="supplierId"    column="supplier_id"    />
        <result property="supplierName"    column="supplier_name"    />
        <result property="contact"    column="contact"    />
        <result property="address"    column="address"    />
        <result property="remark"    column="remark"    />
        <result property="startDate"    column="start_date"    />
        <result property="lastSupplyTime"    column="last_supply_time"    />
    </resultMap>

    <sql id="selectSupplierVo">
        select supplier_id, supplier_name, contact, address, remark, start_date, last_supply_time from supplier
    </sql>

    <select id="selectSupplierList" parameterType="Supplier" resultMap="SupplierResult">
        <include refid="selectSupplierVo"/>
        <where>  
            <if test="supplierId != null "> and supplier_id = #{supplierId}</if>
            <if test="supplierName != null  and supplierName != ''"> and supplier_name like concat('%', #{supplierName}, '%')</if>
            <if test="contact != null  and contact != ''"> and contact like concat('%', #{contact}, '%')</if>
            <if test="address != null  and address != ''"> and address like concat('%', #{address}, '%')</if>
            <if test="remark != null  and remark != ''"> and remark like concat('%', #{remark}, '%')</if>
        </where>
    </select>
    
    <select id="selectSupplierBySupplierId" parameterType="Long" resultMap="SupplierResult">
        <include refid="selectSupplierVo"/>
        where supplier_id = #{supplierId}
    </select>
        
    <insert id="insertSupplier" parameterType="Supplier" useGeneratedKeys="true" keyProperty="supplierId">
        insert into supplier
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="supplierName != null and supplierName != ''">supplier_name,</if>
            <if test="contact != null">contact,</if>
            <if test="address != null">address,</if>
            <if test="remark != null">remark,</if>
            <if test="startDate != null">start_date,</if>
            <if test="lastSupplyTime != null">last_supply_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="supplierName != null and supplierName != ''">#{supplierName},</if>
            <if test="contact != null">#{contact},</if>
            <if test="address != null">#{address},</if>
            <if test="remark != null">#{remark},</if>
            <if test="startDate != null">#{startDate},</if>
            <if test="lastSupplyTime != null">#{lastSupplyTime},</if>
         </trim>
    </insert>

    <update id="updateSupplier" parameterType="Supplier">
        update supplier
        <trim prefix="SET" suffixOverrides=",">
            <if test="supplierName != null and supplierName != ''">supplier_name = #{supplierName},</if>
            <if test="contact != null">contact = #{contact},</if>
            <if test="address != null">address = #{address},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="startDate != null">start_date = #{startDate},</if>
            <if test="lastSupplyTime != null">last_supply_time = #{lastSupplyTime},</if>
        </trim>
        where supplier_id = #{supplierId}
    </update>

    <delete id="deleteSupplierBySupplierId" parameterType="Long">
        delete from supplier where supplier_id = #{supplierId}
    </delete>

    <delete id="deleteSupplierBySupplierIds" parameterType="String">
        delete from supplier where supplier_id in 
        <foreach item="supplierId" collection="array" open="(" separator="," close=")">
            #{supplierId}
        </foreach>
    </delete>
</mapper>